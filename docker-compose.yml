services: # The containers we are going to run
  nginx:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /home/ubuntu/rstudio_docker/nginx.conf:/etc/nginx/nginx.conf
      - /home/ubuntu/ssl:/ssl/
  shiny:
    image: mdancho/shinyauth:latest
    container_name: shiny
    restart: unless-stopped
    expose:
      - 3838
    volumes:
      - /home/ubuntu/business_science_apps/:/srv/shiny-server/
      - /home/ubuntu/log/shiny-server/:/var/log/shiny-server/
  app:
    build:
      context: ./ # The path in the machine that have the files, in this case root
      dockerfile: Dockerfile # The name of the Dockerfile definition
    container_name: app
    restart: unless-stopped
    volumes:
      - ./src:/app/src # To copy changes in the local machine to the container.
    ports:
      - "3000:3000" # To expose the app to the machine localhost (machine-port:container:port)
    networks:
      - app-network # Connect the app to the network, in this case to use the database
    depends_on: # Build dependencies in case one containers needs another to be builded first
      - db # To build after the database
    environment:
      DATABASE_USER: jpobletel"
      DATABASE_PASSWORD: j9197812 

  db: # The database service
    image: postgres # Using the oficial dockerhub image
    container_name: postgres
    networks:
      - app-network # Connect to the network to be used by other containers (ej: the web server)
    environment: # all the enviroment variables defined in the container (see postgres official image docs https://hub.docker.com/_/postgres)
      POSTGRES_USER: "jpobletel"
      POSTGRES_PASSWORD: "j9197812"
      POSTGRES_DB: dcc
    ports:
      - "49154:49154" # Expose to the local machine, for example to use a db UI like pgAdmin, etc...
    
    volumes:
      # To persist the data in the database we have a volume that persist after container deletion
      # and copy the files from the container to the volume.
      - db-volume:/var/lib/postgresql/data 

networks: # All the networks that connects our containers
  app-network:
    driver: bridge

volumes: # All the named volumes needed to persist data after container deletion
  db-volume: